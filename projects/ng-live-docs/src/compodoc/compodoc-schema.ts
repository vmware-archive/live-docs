/*!
 * Copyright 2020 VMware, Inc.
 * SPDX-License-Identifier: BSD-2-Clause
 */

/**
 * There are no typing definitions for the compodoc objects so we define them manually here.
 */

import {ApiParameters} from '../documentation-retriever.service';

/**
 * The root object of the compodoc autogenerated documentation (documentation.json)
 */
export interface CompodocSchema {
    components: CompodocComponent[];
    modules: CompodocModule[];
    interfaces: RawGenericCompodocItem[];
    injectables: RawGenericCompodocItem[];
    classes: RawGenericCompodocItem[];
    directives: RawGenericCompodocItem[];
    miscellaneous: {
        variables: RawGenericCompodocItem[];
        functions: RawGenericCompodocItem[];
        typealiases: RawGenericCompodocItem[];
        enumerations: RawGenericCompodocItem[];
    };
}

export interface RawGenericCompodocItem {
    name: string;
}

export interface GenericCompodocItem {
    /**
     * The name of this Compodoc item.
     */
    name: string;
    /**
     * Key that this object is located at within the Compodoc JSON, e.g., variables, directives, components.
     * Could be top level or under miscellaneous (variables, functions, typealiases, enumerations)
     */
    itemType: string;
}

/**
 * Component description as defined in the Compodoc generated documentation JSON
 */
export interface CompodocComponent extends RawGenericCompodocItem {
    description: string;
    sourceCode: string;
    templateUrl: string[];
    templateData: string;
    styleUrls: string[];
    styleUrlsData: StyleUrlsData[];
    inputsClass: ApiParameters[];
    outputsClass: ApiParameters[];
    file: string;
    selector: string;
}

export interface CompodocModule extends RawGenericCompodocItem {
    path: string;
    sourceCode: string;
    children: {
        type: string;
        elements: { name: string }[];
    }[];
}

export interface StyleUrlsData {
    data: string;
    styleUrl: string;
}
